@model SaintAdviser.WEB.Models.ContactViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

}
<div class="text-center">
    <h1 class="display-4">Contact</h1>
</div>
<div class="container">
    <div class="row">
        <div class="col-lg-12">

            <div class="card card-danger">
                @*<div class="card-header">
                        <h3 class="card-title">Contact Form</h3>
                    </div>*@
                <!-- /.card-header -->
                <!-- form start -->
                <form asp-controller="Contact" asp-action="Register" method="post">
                    <div class="card-body card-danger">
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label for="FullNameTB">Full Name</label>
                                    @Html.TextBoxFor(m => m.FullName, new { type = "text", id = "FullNameTB", @class = "form-control ", placeholder = "Enter full name" })
                                </div>

                                <div class="form-group">
                                    <label for="PhoneTB">Phone Number</label>
                                    @Html.TextBoxFor(m => m.Phone, new { type = "text", id = "PhoneTB", @class = "form-control ", placeholder = "Enter phone number" })
                                </div>

                                <div class="form-group">
                                    <label for="CompanyNameTB">Company Name</label>
                                    @Html.TextBoxFor(m => m.CompanyName, new { type = "text", id = "CompanyNameTB", @class = "form-control ", placeholder = "Enter company name" })
                                </div>

                                <div class="form-group">
                                    <label for="EmailTB">Email address</label>
                                    @Html.TextBoxFor(m => m.Email, new { type = "email", id = "EmailTB", @class = "form-control ", placeholder = "Enter email" })
                                </div>

                                <div class="form-group">
                                    <label for="country">Country</label>
                                    <!-- country -->
                                    <select id="country" class='form-control selectpicker' data-live-search='true'><option value=""></option></select>
                                </div>

                                <div class="form-group">
                                    <label for="region">Region</label>
                                    <!-- country -->
                                    <select id="region" class='form-control'><option value=""></option></select>
                                </div>

                                <div class="form-group">
                                    <label for="city">City</label>
                                    <!-- country -->
                                    <select id="city" class='form-control'><option value=""></option></select>
                                </div>

                            </div>

                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="AdditionalInformationTB">Additional Information</label>
                                    @Html.TextAreaFor(m => m.Description, new { type = "text", id = "AdditionalInformationTB", @class = "form-control ", placeholder = "Enter additional information" })
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <div class="form-check">
                                        @*<input type="checkbox" class="form-check-input" id="exampleCheck1">*@
                                        @Html.CheckBoxFor(m => m.Policy, new { id = "PolicyCB", @class = "form-check-input" })
                                        <label class="form-check-label" for="PolicyCB">Policy For The Protection Of Data</label>
                                    </div>
                                    <div class="form-group" @*class="card-footer"*@>
                                        <button type="submit" class="btn btn-danger">Get An Offer</button>
                                    </div>
                                    <div class="form-group">
                                        @Html.ActionLink("Set an appointment", "index", "Contact", new { @class = "form-control" }, new { @style = "color: #DC143C;" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    @Html.HiddenFor(m => m.ResearchPageData.SectorIndustri)
                    @Html.HiddenFor(m => m.ResearchPageData.CustomerProfile)
                    @Html.HiddenFor(m => m.ResearchPageData.AdvertisingCosts)
                    @Html.HiddenFor(m => m.ResearchPageData.SupplierWholesale)
                    @Html.HiddenFor(m => m.SellOnlinePageData.TranslateWebsite)
                    @Html.HiddenFor(m => m.SellOnlinePageData.Advertising)
                    @Html.HiddenFor(m => m.SellOnlinePageData.SocialMedia)
                    @Html.HiddenFor(m => m.DistributorshipPageData.Option1)
                    @Html.HiddenFor(m => m.DistributorshipPageData.Option2)
                    @Html.HiddenFor(m => m.OperationsPageData.UserInput)
                    @Html.HiddenFor(m => m.Country, new { id = "CountryHidden" })
                    @Html.HiddenFor(m => m.Region, new { id = "RegionHidden" })
                    @Html.HiddenFor(m => m.City, new { id = "CityHidden" })
                </form>
            </div>

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        //-------------------------------SELECT CASCADING-------------------------//
        var selectedCountry = (selectedRegion = selectedCity = "");
        // This is a demo API key for testing purposes. You should rather request your API key (free) from http://battuta.medunes.net/
        var BATTUTA_KEY = "00000000000000000000000000000000";
        // Populate country select box from battuta API
        url = "https://battuta.medunes.net/api/country/all/?key=" +
            BATTUTA_KEY +
            "&callback=?";

        // EXTRACT JSON DATA.
        $.getJSON(url, function (data) {
            //console.log(data);
            $.each(data, function (index, value) {
                // APPEND OR INSERT DATA TO SELECT ELEMENT.
                $("#country").append(
                    '<option value="' + value.code + '">' + value.name + "</option>"
                );
            });
        });
        // Country selected --> update region list .
        $("#country").change(function () {
            selectedCountry = this.options[this.selectedIndex].text;
            countryCode = $("#country").val();
            // Populate country select box from battuta API
            url =
                "https://battuta.medunes.net/api/region/" +
                countryCode +
                "/all/?key=" +
                BATTUTA_KEY +
                "&callback=?";
            $.getJSON(url, function (data) {
                $("#region option").remove();
                $('#region').append('<option value="">Please select your region</option>');
                $.each(data, function (index, value) {
                    // APPEND OR INSERT DATA TO SELECT ELEMENT.
                    $("#region").append(
                        '<option value="' + value.region + '">' + value.region + "</option>"
                    );
                });
            });
        });
        // Region selected --> updated city list
        $("#region").on("change", function () {
            selectedRegion = this.options[this.selectedIndex].text;
            // Populate country select box from battuta API
            countryCode = $("#country").val();
            region = $("#region").val();
            url =
                "https://battuta.medunes.net/api/city/" +
                countryCode +
                "/search/?region=" +
                region +
                "&key=" +
                BATTUTA_KEY +
                "&callback=?";
            $.getJSON(url, function (data) {
                console.log(data);
                $("#city option").remove();
                $('#city').append('<option value="">Please select your city</option>');
                $.each(data, function (index, value) {
                    // APPEND OR INSERT DATA TO SELECT ELEMENT.
                    $("#city").append(
                        '<option value="' + value.city + '">' + value.city + "</option>"
                    );
                });
            });
        });
        // city selected --> update location string
        $("#city").on("change", function () {
            selectedCity = this.options[this.selectedIndex].text;
            $("#location").html(
                "Locatation: Country: " +
                selectedCountry +
                ", Region: " +
                selectedRegion +
                ", City: " +
                selectedCity
            );
        });



        $('#country').on('change', function () {
            //alert(this.value);
            var text = this.options[this.selectedIndex].text;
            $('#CountryHidden').val(text);
        });
        $('#region').on('change', function () {
            //alert(this.value);
            var text = this.options[this.selectedIndex].text;
            $('#RegionHidden').val(text);
        });
        $('#city').on('change', function () {
            //alert(this.value);
            var text = this.options[this.selectedIndex].text;
            $('#CityHidden').val(text);
        });

    });

</script>